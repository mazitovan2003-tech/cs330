// 1) Basic "int" and "floating-point number" examples
let intLike = 42;
let floatLike = 3.14;
console.log("intLike:", intLike, "typeof:", typeof intLike);
console.log("floatLike:", floatLike, "typeof:", typeof floatLike);

// 2) BigInt
const big = 9007199254740991n;
console.log("big:", big, "typeof:", typeof big);

// 3) String and Boolean
let str = "hello";
let boolVal = true;
console.log(str, typeof str, boolVal, typeof boolVal);

// 4) Array and Object
let arr = [1, "two", true, { name: "obj" }];
let dict = { firstName: "Alice", age: 30 };
console.log("arr:", arr);
console.log("dict.age:", dict.age);

// 5) Operations: numbers
console.log("5 + 6 =", 5 + 6);
console.log("5 / 2 =", 5 / 2);

// 6) Mixing string and number
console.log('"5" + 6  =', "5" + 6);
console.log('"5" - 1  =', "5" - 1);

// 7) Explicit conversions
console.log('Number("5") + 6 =', Number("5") + 6);
console.log('parseInt("12px") =', parseInt("12px"));
console.log('parseFloat("3.14px") =', parseFloat("3.14px"));

// 8) BigInt and Number conversions
console.log("BigInt(2) + 1n =>", BigInt(2) + 1n);
console.log("Number(1n) + 2 =>", Number(1n) + 2);

// 9) Equality and coercion
console.log("0 == false ", 0 == false);
console.log("0 === false ", 0 === false);

// 10) typeof null 
console.log("typeof null ", typeof null);
console.log("null === null ", null === null);

// 11) Mutability with const
const C = { a: 1 };
C.a = 2; // allowed
console.log("C after mutation:", C);

// 12) Numeric limits
console.log("Number.MAX_SAFE_INTEGER:", Number.MAX_SAFE_INTEGER);
console.log("1e21 + 1 === 1e21 ?", 1e21 + 1 === 1e21);
